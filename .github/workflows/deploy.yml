name: Deploy to GitHub Pages

on:
  push:
    branches: [main]
  workflow_dispatch:

permissions:
  contents: read
  pages: write
  id-token: write

concurrency:
  group: "pages"
  cancel-in-progress: false

jobs:
  build:
    runs-on: ubuntu-latest
    environment: maimatch_web_env
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "18"
          cache: "npm"

      - name: Install dependencies
        run: npm ci

      - name: Debug Secrets Presence
        run: |
          echo "Checking if secrets are set (will show true/false):"
          echo "Has API_KEY: ${{ secrets.FIREBASE_API_KEY != '' }}"
          echo "Has AUTH_DOMAIN: ${{ secrets.FIREBASE_AUTH_DOMAIN != '' }}"
          echo "Has PROJECT_ID: ${{ secrets.FIREBASE_PROJECT_ID != '' }}"
          echo "Has STORAGE_BUCKET: ${{ secrets.FIREBASE_STORAGE_BUCKET != '' }}"
          echo "Has MESSAGING_SENDER_ID: ${{ secrets.FIREBASE_MESSAGING_SENDER_ID != '' }}"
          echo "Has APP_ID: ${{ secrets.FIREBASE_APP_ID != '' }}"
          echo "Has MEASUREMENT_ID: ${{ secrets.FIREBASE_MEASUREMENT_ID != '' }}"

      - name: Create Firebase config
        run: |
          mkdir -p src
          echo "Creating firebase-config.ts..."
          cat > src/firebase-config.ts << EOF
          // Firebase configuration for MaiMatch

          export const firebaseConfig = {
            apiKey: "${{ secrets.FIREBASE_API_KEY }}",
            authDomain: "${{ secrets.FIREBASE_AUTH_DOMAIN }}",
            projectId: "${{ secrets.FIREBASE_PROJECT_ID }}",
            storageBucket: "${{ secrets.FIREBASE_STORAGE_BUCKET }}",
            messagingSenderId: "${{ secrets.FIREBASE_MESSAGING_SENDER_ID }}",
            appId: "${{ secrets.FIREBASE_APP_ID }}",
            measurementId: "${{ secrets.FIREBASE_MEASUREMENT_ID }}"
          };

          // Debug logging (safe - no sensitive data)
          console.log('Firebase Config Status:', {
            hasApiKey: !!firebaseConfig.apiKey,
            hasProjectId: !!firebaseConfig.projectId,
            hasAuthDomain: !!firebaseConfig.authDomain,
            projectIdValue: firebaseConfig.projectId || 'NOT_SET'
          });
          EOF

          echo "Verifying firebase-config.ts was created:"
          ls -la src/firebase-config.ts

          echo "Checking if projectId is set (will show true/false):"
          grep -q "projectId: \"\"" src/firebase-config.ts && echo "false" || echo "true"

      - name: Build
        run: npm run build

      - name: Verify Build Output
        run: |
          echo "Checking dist directory contents:"
          ls -la dist
          echo "Checking for main js file:"
          ls -la dist/js/

      - name: Setup Pages
        uses: actions/configure-pages@v4

      - name: Upload artifact
        uses: actions/upload-pages-artifact@v3
        with:
          path: "./dist"

  deploy:
    environment:
      name: maimatch_web_env
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4
